Q1) Create a JSON file (employee.json) containing employee information of minimum 5 employees. Each employee information consists of Name, DOB, Height, City, State. Write a python program that reads this information from the JSON file and saves the information into a list of objects of Employee class. Finally print the list of the Employee objects.
import json

class Employee:
    def __init__(self, name, dob, height, city, state):
        self.name = name
        self.dob = dob
        self.height = height
        self.city = city
        self.state = state

# Create employee data
employee_data = {
    "employees": [
        {
            "Name":    "Aditi Chatterjee",
            "DOB":     "2000-12-13",
            "Height":   160,
            "City":    "Mumbai",
            "State":   "Maharashtra"
        },
        {
            "Name":    "Arijit Singh",
            "DOB":     "1987-04-25",
            "Height":   174,
            "City":    "Murshidabad",
            "State":   "West Bengal"
        },
        {
            "Name":    "Krishna Vaikunth",
            "DOB":     "1993-08-08",
            "Height":   166,
            "City":    "Ujjain",
            "State":   "Madhya Pradesh"
        },
        {
            "Name":    "Raj Malhotra",
            "DOB":     "1992-03-02",
            "Height":   174,
            "City":    "Jalandhar",
            "State":   "Punjab"
        },
        {
            "Name":    "Farooq Shaikh",
            "DOB":     "1988-06-17",
            "Height":   170,
            "City":    "Srinagar",
            "State":   "Jammu and Kashmir"
        }
    ]
}

# Save employee data to JSON file
with open('employee.json', 'w') as file:
    json.dump(employee_data, file)

# Read the employee information from the JSON file
with open('employee.json') as file:
    data = json.load(file)
    employee_list = []
    for employee_data in data['employees']:
        name = employee_data['Name']
        dob = employee_data['DOB']
        height = employee_data['Height']
        city = employee_data['City']
        state = employee_data['State']
        employee = Employee(name, dob, height, city, state)
        employee_list.append(employee)

# Print the list of employee objects
for employee in employee_list:
    print("Name:", employee.name)
    print("DOB:", employee.dob)
    print("Height:", employee.height)
    print("City:", employee.city)
    print("State:", employee.state)
    print()

Q2)Create a dictionary of any 7 Indian states and their capitals. Write this into a JSON file.
import json

# Dictionary of Indian states and capitals
states = {
    "West Bengal ": "Kolkata",
    "Maharashtra ": "Mumbai",
    "Bihar": "Patna",
    "Gujarat": "Gandhinagar",
    "Assam": "Dispur",
    "Tamil Nadu": "Chennai",
    "Jammu and Kashmir":"Srinagar"
}

# Write dictionary to JSON file
with open('states.json', 'w') as file:
    json.dump(states, file)
print("These are the Indian States with thier capitals in json")

Q1)Create a class named ‘Dog’. It should have a constructor which accepts its name, age and coat color. You must perform the following operations:
class Dog:
    def __init__(self, name, age, coat_color):
        self.name = name
        self.age = age
        self.coat_color = coat_color

    def description(self):
        print("Name:", self.name)
        print("Age:", self.age)

    def get_info(self):
        print("Coat Color:", self.coat_color)


class JackRussellTerrier(Dog):
    def _init_(self, name, age, coat_color):
        super()._init_(name, age, coat_color)

    def playful(self):
        print(self.name, "is always ready to play.")

    def friendly(self):
        print(self.name, "loves to make friends.")


class Bulldog(Dog):
    def _init_(self, name, age, coat_color):
        super()._init_(name, age, coat_color)

    def treatos(self):
        print(self.name, "always wants treatos")

    def bark(self):
        print(self.name, "barks on strangers.")


# Creating objects and implementing the functionalities
dog1 = Dog("Luffy", 3, "Golden")
dog1.description()
dog1.get_info()
print()

dog2 = JackRussellTerrier("Alex", 3, "White ")
dog2.description()
dog2.get_info()
dog2.playful()
dog2.friendly()
print()

dog3 = Bulldog("Cooper", 4, "Brown")
dog3.description()
dog3.get_info()
dog3.treatos()
dog3.bark()
